import itertools

with open('input.txt') as f:
    lines=f.readlines()
#    print(lines[8])

### Figure out how many stacks are there and store them in a list ###
    stacks_line=[lines.index(l) for l in lines if l.startswith(' 1')]   
#    print(stacks_line[0])
    stacks=[list(num) for num in lines[stacks_line[0]].split()]
#    print(stacks)
#    print(len(lines[stacks_line[0]]))
### Figure out positions of letters in stacks from stack number position in string ###
    letter_pos=[]
    for i in range(0,len(lines[stacks_line[0]])):
        if lines[stacks_line[0]][i].isnumeric():
            letter_pos.append(i)
        else:
            pass
#    print(letter_pos)
### Time to start bulding the initial stacks ###
    for i,j in itertools.product(letter_pos,range(stacks_line[0],-1,-1)):
        if lines[j][i].isalpha():
            stacks[letter_pos.index(i)].append(lines[j][i])
    print(stacks)

### Now for the moves ###
#    print(lines[10].split()[1])
    moves=int(stacks_line[0])+2
#    print(stacks[int(lines[10].split()[3])-1][-2:])
    for i in range(moves, len(lines)):
        l=int(lines[i].split()[1])
        stacks[int(lines[i].split()[5])-1].extend(stacks[int(lines[i].split()[3])-1][-l:])
        del stacks[int(lines[i].split()[3])-1][-l:]

    #l=int(lines[10].split()[1])
    #stacks[int(lines[10].split()[5])-1].extend(stacks[int(lines[10].split()[3])-1][-l:])
    #del stacks[int(lines[10].split()[3])-1][-l:]

    for i in range(0,len(letter_pos)):
       print(stacks[i][-1:])
    print(stacks)
